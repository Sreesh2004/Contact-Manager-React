{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case FILTER_CONTACT:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload.searchTerm}`, 'gi');\n\n          // Check for matching name/email or blood group\n          const matchesSearchTerm = contact.name.match(regex) || contact.email.match(regex);\n          const matchesBloodGroup = action.payload.bloodGroup ? contact.bloodGroup === action.payload.bloodGroup : true;\n\n          // Return the contact if it matches either the search term or blood group\n          return matchesSearchTerm && matchesBloodGroup;\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACT","CLEAR_FILTER","state","action","type","contacts","payload","map","contact","id","filter","current","filtered","regex","RegExp","searchTerm","matchesSearchTerm","name","match","email","matchesBloodGroup","bloodGroup"],"sources":["C:/Users/visha/OneDrive/Desktop/cm5/contact-book-react/client/src/Context/Contact/contactReducers.js"],"sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n} from '../types'\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      }\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      }\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      }\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      }\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      }\r\n\r\n      case FILTER_CONTACT:\r\n        return {\r\n          ...state,\r\n          filtered: state.contacts.filter((contact) => {\r\n            const regex = new RegExp(`${action.payload.searchTerm}`, 'gi')\r\n            \r\n            // Check for matching name/email or blood group\r\n            const matchesSearchTerm =\r\n              contact.name.match(regex) || contact.email.match(regex)\r\n      \r\n            const matchesBloodGroup =\r\n              action.payload.bloodGroup ? contact.bloodGroup === action.payload.bloodGroup : true\r\n      \r\n            // Return the contact if it matches either the search term or blood group\r\n            return matchesSearchTerm && matchesBloodGroup\r\n          }),\r\n        }\r\n      \r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,YAAY,QACP,UAAU;;AAEjB;AACA,eAAe,CAACC,KAAK,EAAEC,MAAM,KAAK;EAChC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,WAAW;MACd,OAAO;QACL,GAAGO,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,EAAEF,MAAM,CAACG,OAAO;MAC9C,CAAC;IACH,KAAKT,cAAc;MACjB,OAAO;QACL,GAAGK,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACE,GAAG,CAAEC,OAAO,IACnCA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACG,OAAO,CAACG,EAAE,GAAGN,MAAM,CAACG,OAAO,GAAGE,OACtD;MACF,CAAC;IACH,KAAKZ,cAAc;MACjB,OAAO;QACL,GAAGM,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACK,MAAM,CAC5BF,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACG,OACrC;MACF,CAAC;IACH,KAAKR,WAAW;MACd,OAAO;QACL,GAAGI,KAAK;QACRS,OAAO,EAAER,MAAM,CAACG;MAClB,CAAC;IACH,KAAKP,aAAa;MAChB,OAAO;QACL,GAAGG,KAAK;QACRS,OAAO,EAAE;MACX,CAAC;IAED,KAAKX,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRU,QAAQ,EAAEV,KAAK,CAACG,QAAQ,CAACK,MAAM,CAAEF,OAAO,IAAK;UAC3C,MAAMK,KAAK,GAAG,IAAIC,MAAM,CAAC,GAAGX,MAAM,CAACG,OAAO,CAACS,UAAU,EAAE,EAAE,IAAI,CAAC;;UAE9D;UACA,MAAMC,iBAAiB,GACrBR,OAAO,CAACS,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC,IAAIL,OAAO,CAACW,KAAK,CAACD,KAAK,CAACL,KAAK,CAAC;UAEzD,MAAMO,iBAAiB,GACrBjB,MAAM,CAACG,OAAO,CAACe,UAAU,GAAGb,OAAO,CAACa,UAAU,KAAKlB,MAAM,CAACG,OAAO,CAACe,UAAU,GAAG,IAAI;;UAErF;UACA,OAAOL,iBAAiB,IAAII,iBAAiB;QAC/C,CAAC;MACH,CAAC;IAGL,KAAKnB,YAAY;MACf,OAAO;QACL,GAAGC,KAAK;QACRU,QAAQ,EAAE;MACZ,CAAC;IAEH;MACE,OAAOV,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}