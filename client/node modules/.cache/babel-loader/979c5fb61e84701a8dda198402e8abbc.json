{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\cm5\\\\contact-book-react\\\\client\\\\src\\\\Context\\\\Contact\\\\contactState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport contactReducers from './contactReducers';\nimport { ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uuid = require('uuid');\nconst ContactState = props => {\n  _s();\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-333',\n      type: 'professional'\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducers, initialState);\n  //ADD CONTACT\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  };\n\n  //DELETE CONTACT\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  //SET CURRENT CONTACT\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  //CLEAR CURRENT CONTACT\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  //UPDATE CURRENT CONTACT\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  //FILTER COONTACTS\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  };\n\n  //CLEAR FLITER\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContactState;\nexport default ContactState;\nvar _c;\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","ContactContext","contactReducers","ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACT","CLEAR_FILTER","jsxDEV","_jsxDEV","uuid","require","ContactState","props","_s","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/cm5/contact-book-react/client/src/Context/Contact/contactState.js"],"sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nimport ContactContext from './contactContext'\r\nimport contactReducers from './contactReducers'\r\n\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n} from '../types'\r\n\r\nconst uuid = require('uuid')\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: 'Jill Johnson',\r\n        email: 'jill@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Sara Watson',\r\n        email: 'sara@gmail.com',\r\n        phone: '222-222-2222',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Harry White',\r\n        email: 'harry@gmail.com',\r\n        phone: '333-333-333',\r\n        type: 'professional',\r\n      },\r\n    ],\r\n    current: null,\r\n    filtered: null,\r\n  }\r\n  const [state, dispatch] = useReducer(contactReducers, initialState)\r\n  //ADD CONTACT\r\n\r\n  const addContact = (contact) => {\r\n    contact.id = uuid.v4()\r\n    dispatch({ type: ADD_CONTACT, payload: contact })\r\n  }\r\n\r\n  //DELETE CONTACT\r\n\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id })\r\n  }\r\n\r\n  //SET CURRENT CONTACT\r\n\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact })\r\n  }\r\n\r\n  //CLEAR CURRENT CONTACT\r\n\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT })\r\n  }\r\n\r\n  //UPDATE CURRENT CONTACT\r\n\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact })\r\n  }\r\n\r\n  //FILTER COONTACTS\r\n\r\n  const filterContact = (text) => {\r\n    dispatch({ type: FILTER_CONTACT, payload: text })\r\n  }\r\n\r\n  //CLEAR FLITER\r\n\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER })\r\n  }\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ContactState\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}